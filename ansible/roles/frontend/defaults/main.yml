# roles/frontend/defaults/main.yml
---
# Default variables that can be overridden
node_version: "16.x"
app_port: 3000
app_env: "production"

# roles/frontend/handlers/main.yml
---
- name: restart nginx
  service:
    name: nginx
    state: restarted

- name: reload nginx
  service:
    name: nginx
    state: reloaded

# roles/frontend/tasks/main.yml
---
- name: Include install tasks
  include_tasks: install.yml

- name: Include configuration tasks
  include_tasks: config.yml

- name: Include deployment tasks
  include_tasks: deploy.yml

# roles/frontend/tasks/install.yml
---
- name: Update apt cache
  apt:
    update_cache: yes
    cache_valid_time: 3600

- name: Install required packages
  apt:
    name: "{{ item }}"
    state: present
  loop:
    - git
    - curl
    - nginx
    - software-properties-common

- name: Install Node.js repository
  shell: |
    curl -fsSL https://deb.nodesource.com/setup_{{ node_version }} | bash -
  args:
    creates: /etc/apt/sources.list.d/nodesource.list

- name: Install Node.js
  apt:
    name: nodejs
    state: present
    update_cache: yes

- name: Install PM2 globally
  npm:
    name: pm2
    global: yes
    state: present

# roles/frontend/tasks/config.yml
---
- name: Create application directory
  file:
    path: "{{ app_dir }}"
    state: directory
    owner: ubuntu
    group: ubuntu
    mode: '0755'

- name: Configure Nginx site
  template:
    src: nginx.conf.j2
    dest: "{{ nginx_conf_path }}"
    owner: root
    group: root
    mode: '0644'
  notify: restart nginx

- name: Enable site in nginx
  file:
    src: "{{ nginx_conf_path }}"
    dest: "{{ nginx_enabled_path }}"
    state: link
  notify: restart nginx

- name: Ensure nginx is started and enabled
  service:
    name: nginx
    state: started
    enabled: yes

# roles/frontend/tasks/deploy.yml
---
- name: Clean application directory if requested
  file:
    path: "{{ app_dir }}"
    state: absent
  when: clean_deploy | default(false) | bool

- name: Create application directory if needed
  file:
    path: "{{ app_dir }}"
    state: directory
    owner: ubuntu
    group: ubuntu
    mode: '0755'

- name: Clone/update repository (when repository exists)
  git:
    repo: "{{ github_repo }}"
    dest: "{{ app_dir }}"
    version: "{{ git_branch }}"
    update: yes
    force: yes
  become: yes
  become_user: ubuntu
  register: git_status

- name: Install npm dependencies
  npm:
    path: "{{ app_dir }}"
    state: present
  become: yes
  become_user: ubuntu
  when: git_status.changed

- name: Build application
  shell: |
    cd {{ app_dir }} && npm run build
  become: yes
  become_user: ubuntu
  when: git_status.changed

- name: Restart PM2 application
  shell: |
    cd {{ app_dir }} && pm2 delete all || true && pm2 start npm --name "frontend" -- start && pm2 save && pm2 startup
  become: yes
  become_user: ubuntu
  when: git_status.changed